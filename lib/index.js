// Generated by CoffeeScript 1.6.3
(function() {
  var ActorType, MediaLinkType, mongoose, _;

  mongoose = require("mongoose");

  _ = require('underscore');

  MediaLinkType = {
    duration: Number,
    height: Number,
    width: Number,
    url: String
  };

  ActorType = {
    actorId: {
      type: String,
      required: true
    },
    displayName: {
      type: String,
      match: /.{0,100}/
    },
    image: {
      type: MediaLinkType
    }
  };

  /*
  The createdBy method adds a field to a schema to store the userId of the user who created this object.
  Please note that there are two versions supported. The original used the concept of an actor object,
  but it turned out to be overkill. The new one is simpler, it just addes a createdByUserId field of type ObjectId
  
  To run with the old version: Do nothing.
  To run with the new version: set options.v to 2
  To not keep both fields: set options.keepV1 to false
  */


  exports.createdBy = function(schema, options) {
    var defaultUserId;
    if (options == null) {
      options = {};
    }
    _.defaults(options, {
      isRequired: false,
      v: 1,
      keepV1: true
    });
    if (options.v === 1 || options.keepV1) {
      if (!options.defaultActor) {
        options.defaultActor = null;
      }
      schema.add({
        createdBy: {
          type: ActorType,
          "default": options.defaultActor,
          required: options.isRequired
        }
      });
    }
    if (options.v > 1) {
      defaultUserId = null;
      if (options.defaultUserId) {
        defaultUserId = new mongoose.Types.ObjectId(options.defaultUserId.toString());
      }
      return schema.add({
        createdByUserId: {
          type: mongoose.Schema.ObjectId,
          require: options.isRequired,
          "default": defaultUserId
        }
      });
    }
  };

}).call(this);
